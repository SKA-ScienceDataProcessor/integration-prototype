#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Utility module to set initial data into the Configuration Database."""
import json
import sys
from os import listdir
from os.path import dirname, join

from config_db.config_db_redis import ConfigDb
from config_db.sdp_state import SDPState
from config_db.service_state import ServiceState
from config_db.subarray_list import SubarrayList
from config_db.workflow_definitions import add_workflow_definition


def initialise_states():
    """Initialise fields for the state of SDP."""
    print('* Initialising SDP state')
    SDPState()
    with open(join(dirname(__file__), 'data', 'services.json'), 'r') as file:
        services = json.load(file)
        for service in services['services']:
            print('* Initialising service state: {}'.format(service))
            subsystem, name, version = service.split('.')
            ServiceState(subsystem, name, version)


def initialise_subarrays():
    """Initialise subarrays."""
    print('* Initialising subarrays')
    SubarrayList()


def add_workflow_definitions(workflow_definitions_path: str = None):
    """Add workflow definitions.

    Args:
        workflow_definitions_path (str): Path used to store workflow
                                         definitions
    """
    if workflow_definitions_path is None:
        path = join(dirname(__file__), 'data')
    else:
        path = workflow_definitions_path
    workflow_files = [join(path, fn) for fn in listdir(path)
                      if fn.endswith('.json')
                      and not fn.startswith('test')
                      and not fn == 'services.json']
    for file_path in workflow_files:
        print('* Loading workflow template: {}'.format(file_path))
        with open(file_path, 'r') as file:
            workflow_dict = json.load(file)
            add_workflow_definition(workflow_dict, join(path, 'templates'))


def main():
    """Initialise the database."""
    ConfigDb().flush_db()
    initialise_subarrays()
    initialise_states()
    add_workflow_definitions_path = sys.argv[1] if len(sys.argv) > 1 else None
    add_workflow_definitions(add_workflow_definitions_path)


if __name__ == '__main__':
    main()
