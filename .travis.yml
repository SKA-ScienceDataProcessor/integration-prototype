sudo: required

dist: xenial

notifications:
  slack: ska-sip:zgaO4jJWwB4UjFRulowC5g56

services:
- docker

language: 
- python
- cpp

python:
- 3.6

cache: pip

stages:
  - tests

jobs:
  include:

  - stage: test
    name: "Execution Control: Configuration Database"
    install:
    - pip install -r testing_requirements.txt
    - pip install -r sip/execution_control/configuration_db/requirements.txt
    before_script:
    - docker swarm init
    - docker service create -p 6379:6379 --name=config_db redis:5.0.1-alpine
    script: ./tools/run_tests.sh sip/execution_control/configuration_db
    after_success: codecov

  - stage: test
    name: "Execution Control: Processing Block Controller"
    install:
    - pip install -r testing_requirements.txt
    - pip install -r sip/execution_control/processing_block_controller/requirements.txt
    before_script:
    - docker swarm init
    - docker service create -p 6379:6379 --name=config_db redis:5.0.1-alpine
    script:
    - ./tools/run_tests.sh sip/execution_control/processing_block_controller
    after_success: codecov

  - stage: test
    name: "Execution Control: Processing Controller"
    install:
    - pip install -r testing_requirements.txt
    - pip install -r sip/execution_control/processing_controller/requirements.txt
    before_script:
    - docker swarm init
    - docker service create -p 6379:6379 --name=config_db redis:5.0.1-alpine
    script:
    - ./tools/run_tests.sh sip/execution_control/processing_controller
    after_success: codecov

  - stage: test
    name: "Execution Control: Master Controller"
    install:
    - pip install -r testing_requirements.txt
    - pip install -r sip/execution_control/master_controller/requirements.txt
    before_script:
      - docker swarm init
      - docker service create -p 6379:6379 --name=config_db redis:5.0.1-alpine
    script: ./tools/run_tests.sh sip/execution_control/master_controller
    after_success: codecov

  - stage: test
    name: "Tango Control: Flask Master"
    install:
    - pip install -r testing_requirements.txt
    - pip install -r sip/tango_control/flask_master/requirements.txt
    script: ./tools/run_tests.sh sip/tango_control/flask_master
    after_success: codecov

  - stage: test
    name: "Platform: Logging library (skasip-logging)"
    install:
    - pip install -r testing_requirements.txt
    script: ./tools/run_tests.sh sip/platform/logging
    after_success: codecov
  
  - stage: test
    name: "Visbility Ingest Receiver"
    install:
    # (fake) install dependencies (usually involves wget, configure, make, ...)
    # install into cache folder (build binaries+headers only, no sources and do NOT build there)
    - mkdir -p $HOME/.cache
    - touch $HOME/.cache/mydependency.so
    script: ./tools/build_test.sh
    after_success:
      - bash <(curl -s https://codecov.io/bash) -t uuid-repo-token

