sudo: required

dist: xenial

notifications:
  slack: ska-sip:zgaO4jJWwB4UjFRulowC5g56

services:
- docker

language: python

python:
- 3.6.5

cache: pip

#env:
#  global:
#    - SIP_PCI_LOG_LEVEL=NOTSET
#    - SIP_PCI_LOG_LEVEL=WARN
#    - SIP_DOCKER_API_LOG_LEVEL=INFO

stages:
  - common
  - ec_tests
  - tc_tests

jobs:
  include:

  - stage: common
    install:
    - pip install -r testing_requirements.txt
    before_script:
    - docker swarm init
    - docker network create --driver overlay --attachable sip
    script: true

  - stage: ec_tests
    install:
    - pip install -r sip/execution_control/configuration_db/requirements.txt
<<<<<<< HEAD
    before_script:
    - docker service create -p 6379:6379 --network=sip --name=config_db redis:5.0.1-alpine
    script: ./tools/run_tests.sh sip/execution_control/configuration_db
=======
    - pip install -r sip/execution_control/processing_block_controller/requirements.txt
    before_script:
    - docker service create -p 6379:6379 --network=sip --name=config_db redis:5.0.1-alpine
    script:
    - ./tools/run_tests.sh sip/execution_control/configuration_db
    - ./tools/run_tests.sh sip/execution_control/processing_block_controller
>>>>>>> :green_heart: Another experimental update to the travis build script

  - stage: tc_tests
    install:
    - pip install -r sip/tango_control/flask_master/requirements.txt
    script: ./tools/run_tests.sh sip/tango_control/flask_master

#install:
#- pip install -r testing_requirements.txt
#
#before_script:
#- docker swarm init
#- docker network create --driver overlay --attachable sip
#
#- pip install -r sip/tango_control/flask_master/requirements.txt
#- pip install -r sip/execution_control/master_controller/requirements.txt
#- pip install -r sip/execution_control/configuration_db/requirements.txt
#- pip install -r sip/execution_control/processing_block_controller/requirements.txt
#
#before_script:
#- docker swarm init
#- docker network create --driver overlay --attachable sip
#- docker service create -d -p 6379:6379 --network=sip --name=config_db redis:5.0.1-alpine
#- |
#  docker service create -d --network=sip \
#    --env REDIS_HOST=config_db \
#    --env CELERY_BROKER_URL=redis://config_db/1 \
#    --env CELERY_RESULT_BACKEND=redis://config_db/2 \
#    --mount type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock \
#    --name pbc \
#    skasip/processing_block_controller:1.2.1
#
#script:
#- ./tools/run_tests.sh sip/tango_control/flask_master
#- ./tools/run_tests.sh sip/execution_control/master_controller
#- ./tools/run_tests.sh sip/execution_control/configuration_db
#- ./tools/run_tests.sh sip/execution_control/processing_block_controller
#- ./tools/run_tests.sh sip/platform/logging
#
#- |
#  ./tools/run_test_coverage.sh \
#  sip/platform/logging \
#  sip/execution_control/configuration_db
#
#after_success:
#- codecov
#
#
