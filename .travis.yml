sudo: required

language: python

env:
  global:
    - SIP_PCI_LOG_LEVEL=NOTSET

services:
  - docker

python:
  - "3.6"

cache: pip

# https://github.com/travis-ci/travis-ci/issues/5358
before_install:
  # Add Docker repo to apt.
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  # Install API packages
  - sudo apt-get -qq update
  - sudo apt-get install -y gcc
  - sudo apt-get install -y g++
  - sudo apt-get install -y libboost-program-options-dev
  - sudo apt-get install -y libboost-system-dev
  - sudo apt-get install -y docker-ce
  # Install Python Packages
  # --> Linting and unit tests
  - pip install pylint>=1.9.0
  - pip install pycodestyle>=2.4.0
  - pip install pydocstyle>=2.1.1
  - pip install pytest>=3.5.1
  - pip install pytest-pylint>=0.9.0
  - pip install pytest-codestyle>=1.2.2
  - pip install pytest-docstyle>=1.3.2
  # --> Spead2
  - pip install spead2>=1.7.2
  # --> ??
  - pip install redis>=2.10.6
  - pip install jsonschema>=2.6.0
  - pip install simplejson>=3.15.0
  # Install PCI flask requirements
  - pip install -r sip/execution_control/processing_controller_interface/flask_api/requirements.txt
  # Install EF / EE interface requirements
  - pip install -r sip/execution_framework_interface/docker_compose_generator/requirements.txt
  - pip install -r sip/science_pipeline_workflows/ical_dask/pipelines/requirements.arl.min.txt
  # Start Docker containers needed for unit tests
  - docker run -d -p 6379:6379 --name=config_db redis:4.0.6-alpine
  - docker ps -a

install:
  - echo "Install step..."

#before_script:
#  - echo "Before script"

script:
  - pycodestyle --config=.pycodestyle emulators
  - pycodestyle --config=.pycodestyle --exclude=zookeeper examples
  - pycodestyle --config=.pycodestyle --exclude=receive_visibilities sip
  - pylint --rcfile=./pylintrc --ignore=csp_pss_sender,csp_vis_sender_01,csp_vis_sender_02 emulators
#  - pylint examples/*/*.py
#  - (cd sip && pylint --rcfile=../.pylintrc core_processing)
#  - (cd sip && pylint --rcfile=../.pylintrc execution_control)
#  - (cd sip && pylint --rcfile=../.pylintrc execution_framework_interface)
#  - (cd sip && pylint --rcfile=../.pylintrc execution_frameworks)
#  - (cd sip && pylint --rcfile=../.pylintrc science_pipeline_workflows)
  - pytest --pylint --codestyle -s -v --pylint-rcfile=.pylintrc sip/science_pipeline_workflows/ical_dask
#  - SIP_PCI_LOG_LEVEL="WARN" && pytest --pylint --codestyle -s -v --pylint-rcfile=.pylintrc sip/execution_control/processing_controller_interface/flask_api
#  - pytest --pylint --codestyle -s -v --pylint-rcfile=./.pylintrc sip/execution_framework_interface/docker_compose_generator

#after_success:
#  - echo "Build successful! building docker containers ..."
#
#after_failure:
#  - echo "Build failed :("

#https://docs.travis-ci.com/user/docker/
#deploy:
